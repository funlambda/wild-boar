// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Block2$UiLibrary = require("ui-library/src/Block2.bs.js");
var Reactor$UiLibrary = require("ui-library/src/Reactor.bs.js");

function mutually(block1, block2) {
  return Block2$UiLibrary.mapValue((function (prim) {
                return prim[1];
              }), Block2$UiLibrary.mapInit((function (v) {
                    return /* tuple */[
                            v,
                            v
                          ];
                  }), Reactor$UiLibrary.mkBlock2((function (param) {
                        if (param[0].tag) {
                          var match = param[2][/* value */1];
                          if (match) {
                            return /* :: */[
                                    /* Left */Block.__(0, [/* ReInit */Block.__(0, [match[0]])]),
                                    /* [] */0
                                  ];
                          } else {
                            return /* [] */0;
                          }
                        } else {
                          var match$1 = param[1][/* value */1];
                          if (match$1) {
                            return /* :: */[
                                    /* Right */Block.__(1, [/* ReInit */Block.__(0, [match$1[0]])]),
                                    /* [] */0
                                  ];
                          } else {
                            return /* [] */0;
                          }
                        }
                      }), /* tuple */[
                      block1,
                      block2
                    ])));
}

function secondToFirst(block1, block2) {
  return Block2$UiLibrary.mapValue((function (prim) {
                return prim[1];
              }), Block2$UiLibrary.mapInit((function (x) {
                    return /* tuple */[
                            x,
                            x
                          ];
                  }), Reactor$UiLibrary.mkBlock2((function (param) {
                        if (param[0].tag) {
                          var match = param[2][/* value */1];
                          if (match) {
                            return /* :: */[
                                    /* Left */Block.__(0, [/* ReInit */Block.__(0, [match[0]])]),
                                    /* [] */0
                                  ];
                          } else {
                            return /* [] */0;
                          }
                        } else {
                          return /* [] */0;
                        }
                      }), /* tuple */[
                      block1,
                      block2
                    ])));
}

exports.mutually = mutually;
exports.secondToFirst = secondToFirst;
/* No side effect */

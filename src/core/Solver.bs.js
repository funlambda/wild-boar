// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Vector2 = require("./Vector2.bs.js");
var NumericalSolution = require("./NumericalSolution.bs.js");

function solve(param, initialPosition, stepSize, velocityFunc) {
  var finalT = param[1];
  var initialT = param[0];
  var loop = function (_t, _position, _acc) {
    while(true) {
      var acc = _acc;
      var position = _position;
      var t = _t;
      if (t > finalT + 0.0000000000001) {
        return List.rev(acc);
      } else {
        var velocity = Curry._2(velocityFunc, position, t);
        var positionDelta = Vector2.scale(stepSize, velocity);
        var newPosition = Vector2.add(position, positionDelta);
        var newT = t + stepSize;
        _acc = /* :: */[
          newPosition,
          acc
        ];
        _position = newPosition;
        _t = newT;
        continue ;
        
      }
    };
  };
  return NumericalSolution.mk(initialT, stepSize, $$Array.of_list(loop(initialT, initialPosition, /* [] */0)));
}

var tolerance = 0.0000000000001;

exports.tolerance = tolerance;
exports.solve = solve;
/* No side effect */
